{"ast":null,"code":"const knapsack = (items, capacity) => {\n  const n = items.length;\n  const table = Array.from({\n    length: n + 1\n  }, () => Array(capacity + 1).fill(0));\n  for (let i = 1; i <= n; i++) {\n    const {\n      weight,\n      value,\n      count = 1\n    } = items[i - 1];\n    for (let j = 1; j <= capacity; j++) {\n      let maxVal = table[i - 1][j];\n      for (let k = 0; k <= count; k++) {\n        // Loop para todas as inst창ncias do item\n        if (weight * k <= j) {\n          const newVal = table[i - 1][j - weight * k] + value * k;\n          if (newVal > maxVal) {\n            maxVal = newVal;\n          }\n        }\n      }\n      table[i][j] = maxVal;\n    }\n  }\n  console.log(table);\n  const result = [];\n  let i = n;\n  let j = capacity;\n  while (i > 0 && j > 0) {\n    const {\n      weight,\n      value,\n      count = 1\n    } = items[i - 1];\n    for (let k = count; k >= 0; k--) {\n      // Loop reverso para percorrer todas as inst창ncias do item\n      if (table[i][j] === table[i - 1][j - weight * k] + value * k) {\n        for (let l = 0; l < k; l++) {\n          result.push(items[i - 1]);\n        }\n        j -= weight * k;\n        break;\n      }\n    }\n    i--;\n  }\n  console.log(result);\n  return result;\n};\nexport default knapsack;","map":{"version":3,"names":["knapsack","items","capacity","n","length","table","Array","from","fill","i","weight","value","count","j","maxVal","k","newVal","console","log","result","l","push"],"sources":["/home/isaac/myProjects/dofus-doploons/dooplons-front/src/functions/knapsack.js"],"sourcesContent":["const knapsack = (items, capacity) => {\n  const n = items.length;\n  const table = Array.from({ length: n + 1 }, () =>\n    Array(capacity + 1).fill(0)\n  );\n\n  for (let i = 1; i <= n; i++) {\n    const { weight, value, count = 1 } = items[i - 1];\n\n    for (let j = 1; j <= capacity; j++) {\n      let maxVal = table[i - 1][j];\n      for (let k = 0; k <= count; k++) {\n        // Loop para todas as inst창ncias do item\n        if (weight * k <= j) {\n          const newVal = table[i - 1][j - weight * k] + value * k;\n          if (newVal > maxVal) {\n            maxVal = newVal;\n          }\n        }\n      }\n      table[i][j] = maxVal;\n    }\n  }\n\n  console.log(table);\n\n  const result = [];\n  let i = n;\n  let j = capacity;\n  while (i > 0 && j > 0) {\n    const { weight, value, count = 1 } = items[i - 1];\n    for (let k = count; k >= 0; k--) {\n      // Loop reverso para percorrer todas as inst창ncias do item\n      if (table[i][j] === table[i - 1][j - weight * k] + value * k) {\n        for (let l = 0; l < k; l++) {\n          result.push(items[i - 1]);\n        }\n        j -= weight * k;\n        break;\n      }\n    }\n    i--;\n  }\n\n  console.log(result);\n\n  return result;\n};\n\nexport default knapsack;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACpC,MAAMC,CAAC,GAAGF,KAAK,CAACG,MAAM;EACtB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEH,MAAM,EAAED,CAAC,GAAG;EAAE,CAAC,EAAE,MAC1CG,KAAK,CAACJ,QAAQ,GAAG,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC,CAC5B;EAED,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,CAAC,EAAEM,CAAC,EAAE,EAAE;IAC3B,MAAM;MAAEC,MAAM;MAAEC,KAAK;MAAEC,KAAK,GAAG;IAAE,CAAC,GAAGX,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC;IAEjD,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIX,QAAQ,EAAEW,CAAC,EAAE,EAAE;MAClC,IAAIC,MAAM,GAAGT,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACI,CAAC,CAAC;MAC5B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,KAAK,EAAEG,CAAC,EAAE,EAAE;QAC/B;QACA,IAAIL,MAAM,GAAGK,CAAC,IAAIF,CAAC,EAAE;UACnB,MAAMG,MAAM,GAAGX,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACI,CAAC,GAAGH,MAAM,GAAGK,CAAC,CAAC,GAAGJ,KAAK,GAAGI,CAAC;UACvD,IAAIC,MAAM,GAAGF,MAAM,EAAE;YACnBA,MAAM,GAAGE,MAAM;UACjB;QACF;MACF;MACAX,KAAK,CAACI,CAAC,CAAC,CAACI,CAAC,CAAC,GAAGC,MAAM;IACtB;EACF;EAEAG,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;EAElB,MAAMc,MAAM,GAAG,EAAE;EACjB,IAAIV,CAAC,GAAGN,CAAC;EACT,IAAIU,CAAC,GAAGX,QAAQ;EAChB,OAAOO,CAAC,GAAG,CAAC,IAAII,CAAC,GAAG,CAAC,EAAE;IACrB,MAAM;MAAEH,MAAM;MAAEC,KAAK;MAAEC,KAAK,GAAG;IAAE,CAAC,GAAGX,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC;IACjD,KAAK,IAAIM,CAAC,GAAGH,KAAK,EAAEG,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC/B;MACA,IAAIV,KAAK,CAACI,CAAC,CAAC,CAACI,CAAC,CAAC,KAAKR,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACI,CAAC,GAAGH,MAAM,GAAGK,CAAC,CAAC,GAAGJ,KAAK,GAAGI,CAAC,EAAE;QAC5D,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,CAAC,EAAEK,CAAC,EAAE,EAAE;UAC1BD,MAAM,CAACE,IAAI,CAACpB,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3B;QACAI,CAAC,IAAIH,MAAM,GAAGK,CAAC;QACf;MACF;IACF;IACAN,CAAC,EAAE;EACL;EAEAQ,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;EAEnB,OAAOA,MAAM;AACf,CAAC;AAED,eAAenB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}