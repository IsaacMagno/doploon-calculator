{"ast":null,"code":"const knapsack = (items, capacity) => {\n  const n = items.length;\n  const table = Array.from({\n    length: n + 1\n  }, () => Array(capacity + 1).fill(0));\n  for (let i = 1; i <= n; i++) {\n    const {\n      weight,\n      value,\n      count = 1\n    } = items[i - 1];\n    console.log(table);\n    for (let j = 1; j <= capacity; j++) {\n      let maxVal = table[i - 1][j];\n      for (let k = 1; k <= count; k++) {\n        if (weight <= j && table[i - 1][j - weight * k] + value * k > maxVal) {\n          maxVal = table[i - 1][j - weight * k] + value * k;\n        }\n      }\n      table[i][j] = maxVal;\n    }\n  }\n  const result = [];\n  let i = n;\n  let j = capacity;\n  while (i > 0 && j > 0) {\n    const {\n      weight,\n      value,\n      count = 1\n    } = items[i - 1];\n    if (table[i][j] !== table[i - 1][j]) {\n      result.push(items[i - 1]);\n      j -= weight;\n      items[i - 1].count = items[i - 1].count - 1;\n    } else if (table[i][j] === table[i - 1][j] && count > 1) {\n      items[i - 1].count = items[i - 1].count - 1;\n    }\n    i -= 1;\n  }\n  console.log(result);\n  return result;\n};\nexport default knapsack;","map":{"version":3,"names":["knapsack","items","capacity","n","length","table","Array","from","fill","i","weight","value","count","console","log","j","maxVal","k","result","push"],"sources":["/home/isaac/myProjects/dofus-doploons/dooplons-front/src/functions/knapsack.js"],"sourcesContent":["const knapsack = (items, capacity) => {\n  const n = items.length;\n  const table = Array.from({ length: n + 1 }, () =>\n    Array(capacity + 1).fill(0)\n  );\n\n  for (let i = 1; i <= n; i++) {\n    const { weight, value, count = 1 } = items[i - 1];\n    console.log(table);\n\n    for (let j = 1; j <= capacity; j++) {\n      let maxVal = table[i - 1][j];\n      for (let k = 1; k <= count; k++) {\n        if (weight <= j && table[i - 1][j - weight * k] + value * k > maxVal) {\n          maxVal = table[i - 1][j - weight * k] + value * k;\n        }\n      }\n      table[i][j] = maxVal;\n    }\n  }\n\n  const result = [];\n  let i = n;\n  let j = capacity;\n  while (i > 0 && j > 0) {\n    const { weight, value, count = 1 } = items[i - 1];\n    if (table[i][j] !== table[i - 1][j]) {\n      result.push(items[i - 1]);\n      j -= weight;\n      items[i - 1].count = items[i - 1].count - 1;\n    } else if (table[i][j] === table[i - 1][j] && count > 1) {\n      items[i - 1].count = items[i - 1].count - 1;\n    }\n    i -= 1;\n  }\n\n  console.log(result);\n\n  return result;\n};\n\nexport default knapsack;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACpC,MAAMC,CAAC,GAAGF,KAAK,CAACG,MAAM;EACtB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEH,MAAM,EAAED,CAAC,GAAG;EAAE,CAAC,EAAE,MAC1CG,KAAK,CAACJ,QAAQ,GAAG,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC,CAC5B;EAED,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,CAAC,EAAEM,CAAC,EAAE,EAAE;IAC3B,MAAM;MAAEC,MAAM;MAAEC,KAAK;MAAEC,KAAK,GAAG;IAAE,CAAC,GAAGX,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC;IACjDI,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;IAElB,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIb,QAAQ,EAAEa,CAAC,EAAE,EAAE;MAClC,IAAIC,MAAM,GAAGX,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACM,CAAC,CAAC;MAC5B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIL,KAAK,EAAEK,CAAC,EAAE,EAAE;QAC/B,IAAIP,MAAM,IAAIK,CAAC,IAAIV,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACM,CAAC,GAAGL,MAAM,GAAGO,CAAC,CAAC,GAAGN,KAAK,GAAGM,CAAC,GAAGD,MAAM,EAAE;UACpEA,MAAM,GAAGX,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACM,CAAC,GAAGL,MAAM,GAAGO,CAAC,CAAC,GAAGN,KAAK,GAAGM,CAAC;QACnD;MACF;MACAZ,KAAK,CAACI,CAAC,CAAC,CAACM,CAAC,CAAC,GAAGC,MAAM;IACtB;EACF;EAEA,MAAME,MAAM,GAAG,EAAE;EACjB,IAAIT,CAAC,GAAGN,CAAC;EACT,IAAIY,CAAC,GAAGb,QAAQ;EAChB,OAAOO,CAAC,GAAG,CAAC,IAAIM,CAAC,GAAG,CAAC,EAAE;IACrB,MAAM;MAAEL,MAAM;MAAEC,KAAK;MAAEC,KAAK,GAAG;IAAE,CAAC,GAAGX,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC;IACjD,IAAIJ,KAAK,CAACI,CAAC,CAAC,CAACM,CAAC,CAAC,KAAKV,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACM,CAAC,CAAC,EAAE;MACnCG,MAAM,CAACC,IAAI,CAAClB,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACzBM,CAAC,IAAIL,MAAM;MACXT,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC,CAACG,KAAK,GAAGX,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC,CAACG,KAAK,GAAG,CAAC;IAC7C,CAAC,MAAM,IAAIP,KAAK,CAACI,CAAC,CAAC,CAACM,CAAC,CAAC,KAAKV,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACM,CAAC,CAAC,IAAIH,KAAK,GAAG,CAAC,EAAE;MACvDX,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC,CAACG,KAAK,GAAGX,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC,CAACG,KAAK,GAAG,CAAC;IAC7C;IACAH,CAAC,IAAI,CAAC;EACR;EAEAI,OAAO,CAACC,GAAG,CAACI,MAAM,CAAC;EAEnB,OAAOA,MAAM;AACf,CAAC;AAED,eAAelB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}