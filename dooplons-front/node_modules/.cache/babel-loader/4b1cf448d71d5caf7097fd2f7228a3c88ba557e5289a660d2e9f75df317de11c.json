{"ast":null,"code":"const knapsack = (items, capacity) => {\n  const n = items.length;\n  const table = Array.from({\n    length: n + 1\n  }, () => Array(capacity + 1).fill(0));\n  for (let i = 1; i <= n; i++) {\n    const {\n      weight,\n      value,\n      count = 1\n    } = items[i - 1];\n    const temp = {\n      ...items[i - 1]\n    };\n    for (let j = 1; j <= capacity; j++) {\n      let maxVal = table[i - 1][j];\n      for (let k = 0; k <= count; k++) {\n        if (weight * k <= j) {\n          const newVal = table[i - 1][j - weight * k] + value * k;\n          if (newVal > maxVal) {\n            maxVal = newVal;\n            temp.count = k;\n          }\n        }\n      }\n      table[i][j] = maxVal;\n    }\n    items[i - 1] = temp;\n  }\n  const result = [];\n  let i = n;\n  let j = capacity;\n  while (i > 0 && j > 0) {\n    const {\n      weight,\n      value,\n      count\n    } = items[i - 1];\n    if (table[i][j] !== table[i - 1][j]) {\n      result.push({\n        ...items[i - 1]\n      });\n      j -= weight * count;\n    } else if (table[i][j] === table[i - 1][j] && count >= 1) {\n      result.push({\n        ...items[i - 1],\n        count: 0\n      });\n    }\n    i -= 1;\n  }\n  return result.reverse();\n};\nexport default knapsack;","map":{"version":3,"names":["knapsack","items","capacity","n","length","table","Array","from","fill","i","weight","value","count","temp","j","maxVal","k","newVal","result","push","reverse"],"sources":["/home/isaac/myProjects/dofus-doploons/dooplons-front/src/functions/knapsack.js"],"sourcesContent":["const knapsack = (items, capacity) => {\n  const n = items.length;\n  const table = Array.from({ length: n + 1 }, () =>\n    Array(capacity + 1).fill(0)\n  );\n\n  for (let i = 1; i <= n; i++) {\n    const { weight, value, count = 1 } = items[i - 1];\n    const temp = { ...items[i - 1] };\n\n    for (let j = 1; j <= capacity; j++) {\n      let maxVal = table[i - 1][j];\n      for (let k = 0; k <= count; k++) {\n        if (weight * k <= j) {\n          const newVal = table[i - 1][j - weight * k] + value * k;\n          if (newVal > maxVal) {\n            maxVal = newVal;\n            temp.count = k;\n          }\n        }\n      }\n      table[i][j] = maxVal;\n    }\n    items[i - 1] = temp;\n  }\n\n  const result = [];\n  let i = n;\n  let j = capacity;\n  while (i > 0 && j > 0) {\n    const { weight, value, count } = items[i - 1];\n    if (table[i][j] !== table[i - 1][j]) {\n      result.push({ ...items[i - 1] });\n      j -= weight * count;\n    } else if (table[i][j] === table[i - 1][j] && count >= 1) {\n      result.push({ ...items[i - 1], count: 0 });\n    }\n    i -= 1;\n  }\n\n  return result.reverse();\n};\n\nexport default knapsack;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACpC,MAAMC,CAAC,GAAGF,KAAK,CAACG,MAAM;EACtB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEH,MAAM,EAAED,CAAC,GAAG;EAAE,CAAC,EAAE,MAC1CG,KAAK,CAACJ,QAAQ,GAAG,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC,CAC5B;EAED,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,CAAC,EAAEM,CAAC,EAAE,EAAE;IAC3B,MAAM;MAAEC,MAAM;MAAEC,KAAK;MAAEC,KAAK,GAAG;IAAE,CAAC,GAAGX,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC;IACjD,MAAMI,IAAI,GAAG;MAAE,GAAGZ,KAAK,CAACQ,CAAC,GAAG,CAAC;IAAE,CAAC;IAEhC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIZ,QAAQ,EAAEY,CAAC,EAAE,EAAE;MAClC,IAAIC,MAAM,GAAGV,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACK,CAAC,CAAC;MAC5B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,KAAK,EAAEI,CAAC,EAAE,EAAE;QAC/B,IAAIN,MAAM,GAAGM,CAAC,IAAIF,CAAC,EAAE;UACnB,MAAMG,MAAM,GAAGZ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACK,CAAC,GAAGJ,MAAM,GAAGM,CAAC,CAAC,GAAGL,KAAK,GAAGK,CAAC;UACvD,IAAIC,MAAM,GAAGF,MAAM,EAAE;YACnBA,MAAM,GAAGE,MAAM;YACfJ,IAAI,CAACD,KAAK,GAAGI,CAAC;UAChB;QACF;MACF;MACAX,KAAK,CAACI,CAAC,CAAC,CAACK,CAAC,CAAC,GAAGC,MAAM;IACtB;IACAd,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC,GAAGI,IAAI;EACrB;EAEA,MAAMK,MAAM,GAAG,EAAE;EACjB,IAAIT,CAAC,GAAGN,CAAC;EACT,IAAIW,CAAC,GAAGZ,QAAQ;EAChB,OAAOO,CAAC,GAAG,CAAC,IAAIK,CAAC,GAAG,CAAC,EAAE;IACrB,MAAM;MAAEJ,MAAM;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGX,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC;IAC7C,IAAIJ,KAAK,CAACI,CAAC,CAAC,CAACK,CAAC,CAAC,KAAKT,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACK,CAAC,CAAC,EAAE;MACnCI,MAAM,CAACC,IAAI,CAAC;QAAE,GAAGlB,KAAK,CAACQ,CAAC,GAAG,CAAC;MAAE,CAAC,CAAC;MAChCK,CAAC,IAAIJ,MAAM,GAAGE,KAAK;IACrB,CAAC,MAAM,IAAIP,KAAK,CAACI,CAAC,CAAC,CAACK,CAAC,CAAC,KAAKT,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAACK,CAAC,CAAC,IAAIF,KAAK,IAAI,CAAC,EAAE;MACxDM,MAAM,CAACC,IAAI,CAAC;QAAE,GAAGlB,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC;QAAEG,KAAK,EAAE;MAAE,CAAC,CAAC;IAC5C;IACAH,CAAC,IAAI,CAAC;EACR;EAEA,OAAOS,MAAM,CAACE,OAAO,EAAE;AACzB,CAAC;AAED,eAAepB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}